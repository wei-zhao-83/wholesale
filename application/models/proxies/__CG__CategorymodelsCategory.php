<?php

namespace Proxies\__CG__\category\models;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Category extends \category\models\Category implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getSlug()
    {
        $this->__load();
        return parent::getSlug();
    }

    public function setSlug($slug)
    {
        $this->__load();
        return parent::setSlug($slug);
    }

    public function getActive()
    {
        $this->__load();
        return parent::getActive();
    }

    public function setActive($active)
    {
        $this->__load();
        return parent::setActive($active);
    }

    public function getArrange()
    {
        $this->__load();
        return parent::getArrange();
    }

    public function setArrange($arrange)
    {
        $this->__load();
        return parent::setArrange($arrange);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getSEOTitle()
    {
        $this->__load();
        return parent::getSEOTitle();
    }

    public function setSEOTitle($seo_title)
    {
        $this->__load();
        return parent::setSEOTitle($seo_title);
    }

    public function getSEOURL()
    {
        $this->__load();
        return parent::getSEOURL();
    }

    public function setSEOURL($seo_url)
    {
        $this->__load();
        return parent::setSEOURL($seo_url);
    }

    public function getSEOCanonicalLink()
    {
        $this->__load();
        return parent::getSEOCanonicalLink();
    }

    public function setSEOCanonicalLink($canonical_link)
    {
        $this->__load();
        return parent::setSEOCanonicalLink($canonical_link);
    }

    public function getSEOKeywords()
    {
        $this->__load();
        return parent::getSEOKeywords();
    }

    public function setSEOKeywords($keywords)
    {
        $this->__load();
        return parent::setSEOKeywords($keywords);
    }

    public function getSEORobots()
    {
        $this->__load();
        return parent::getSEORobots();
    }

    public function setSEORobots($seo_robots)
    {
        $this->__load();
        return parent::setSEORobots($seo_robots);
    }

    public function getDeletedAt()
    {
        $this->__load();
        return parent::getDeletedAt();
    }

    public function setDeletedAt($deleted_at)
    {
        $this->__load();
        return parent::setDeletedAt($deleted_at);
    }

    public function getTags()
    {
        $this->__load();
        return parent::getTags();
    }

    public function addTag($tag)
    {
        $this->__load();
        return parent::addTag($tag);
    }

    public function removeTag($tag)
    {
        $this->__load();
        return parent::removeTag($tag);
    }

    public function addImage($image)
    {
        $this->__load();
        return parent::addImage($image);
    }

    public function getImages()
    {
        $this->__load();
        return parent::getImages();
    }

    public function removeImage($image)
    {
        $this->__load();
        return parent::removeImage($image);
    }

    public function addProduct($product)
    {
        $this->__load();
        return parent::addProduct($product);
    }

    public function getProducts()
    {
        $this->__load();
        return parent::getProducts();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'slug', 'active', 'arrange', 'description', 'seo_title', 'seo_url', 'seo_canonical_link', 'seo_keywords', 'seo_robots', 'deleted_at', 'tags', 'images', 'products');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}